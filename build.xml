<?xml version="1.0" ?>
<!-- Configuration of the Ant build system to generate a Jar file --> 

<project name="Glacier" default="CreateJar" basedir=".">
  <property name="jsr308.langtools.dist" value="/Users/mcoblenz/code/jsr308-langtools/dist"/>
  <property name="javac.lib" value="${jsr308.langtools.dist}/lib/javac.jar"/>
  <property name="glacier.lib" value="${basedir}/Glacier.jar"/>

  <property name="tests" value="tests"/>
  <property name="tests.build" value="${tests}/build"/>

  <property name="build.reports" value="${tests}/build/reports/"/>
  <property name="checker-framework.loc" value="/Users/mcoblenz/code/checker-framework"/>
  <property name="checker.lib" value="${checker-framework.loc}/checker/dist/checker.jar"/>
  
  <property name="framework.loc" value="${checker-framework.loc}/framework"/>
  <property name="junit.lib" value="${framework.loc}/tests/junit-4.12.jar"/>

  
<property name="hamcrest.lib" value="${framework.loc}/tests/hamcrest-core-1.3.jar"/>
  
  <target name="CreateJar" description="Create Jar file">
    <jar jarfile="Glacier.jar" basedir="bin" />
  </target>

  <target name="prep">
    <mkdir dir="${tests.build}"/>
    <!-- TODO -->
  </target>
  
  <target name="build-tests" depends="prep" description="Compile tests">
    <echo message="tests = ${tests}"/>
    <pathconvert pathsep=" " property="src.tests">
      <path>
	<fileset dir="${tests}">
	  <include name="src/tests/**/*.java"/>
	</fileset>
      </path>
    </pathconvert>
    <echo message="Testing in: ${src.tests}"/>
    <java fork="true"
	  failonerror="true"
	  classpath="${build}:${javac.lib}:${junit.lib}:${hamcrest.lib}:${checker.lib}:${glacier.lib}"
	  classname="com.sun.tools.javac.Main">

      <jvmarg line="-Xbootclasspath/p:${javac.lib}"/>
      <arg value="-g"/>
      <!-- Make sure we only have Java 7 source code and generate Java 7 bytecode. -->
      <arg value="-source"/>
      <arg value="7"/>
      <arg value="-target"/>
      <arg value="7"/>
      <!-- To not get a warning about bootstrap classpath -->
      <arg value="-Xlint:-options"/>
      <arg line="-sourcepath ${tests}"/>
      <arg line="-d ${tests.build}"/>
      <arg line="${src.tests}"/>
    </java>
  </target>

  <target name="glacier-tests" depends="build-tests">
    <antcall target="-run-tests">
    <param name="param" value="tests.GlacierTest"/>
  </antcall>
  
  </target>
  
  <target name="-run-tests">
    <echo message="Running tests: ${param}"/>
    <property name="emit.test.debug" value="true"/>
    <condition property="should.emit.debug.str" value="true" else="false">
      <isset property="emit.test.debug"/>
    </condition>

    <condition property="debugger.str" value="-Xnoagent -Djava.compiler=NONE -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" else="">
      <isset property="debugger.on"/>
    </condition>

    <mkdir dir="${build.reports}"/>

    <!-- non-debugging version: -->
    <!--
	<junit fork="${run.tests.should.fork}"
	dir="${basedir}"
	printsummary="false"
	haltonfailure="${halt.on.test.failure}"
	maxmemory="2500M"
	>
	<formatter type="xml"/>
    -->
    <!-- end of non-debugging version. -->

    <!-- debugging version: -->
    <junit fork="${run.tests.should.fork}"
	   dir="${basedir}"
	   haltonfailure="${halt.on.test.failure}"
	   maxmemory="2500M"
	   showoutput="true"
	   printsummary="withOutAndErr"
	   >
      <formatter type="plain" usefile="false"/>
      <jvmarg line="-Demit.test.debug=true"/>
      <!-- end of debugging version. -->

      <!-- plain output for debugging -->

      <jvmarg line="-Xbootclasspath/p:${javac.lib}"/>
      <jvmarg line="${debugger.str}"/>
      <jvmarg line="-XX:MaxPermSize=512m"/>
      <sysproperty key="JDK_JAR" value="${basedir}/dist/${jdkName}"/>
      <sysproperty key="emit.test.debug" value="${should.emit.debug.str}"/>
      <jvmarg line="-ea"/>

      <classpath>
	<pathelement path="${build}"/>
	<pathelement path="${tests.build}"/>
	<pathelement path="${javac.lib}"/>
	<pathelement path="${junit.lib}"/>
	<pathelement path="${hamcrest.lib}"/>
	<pathelement path="${checker.lib}"/>
      </classpath>

      <test name="${param}" todir="${build.reports}"/>
    </junit>
  </target>
  
</project>
